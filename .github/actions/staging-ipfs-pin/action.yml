name: Pin to staging cluster
description: Upload build to ipfs node
inputs:
  IPFS_STAGING_SERVER_PORT:
    description: ''
    required: true
  IPFS_STAGING_SERVER:
    description: ''
    required: true
  BUILD_PATH:
    description: path to the build directory
    required: true
  IPFS_SSH_KEY:
    description: ''
    required: true
runs:
  using: 'composite'
  steps:
    - name: ipfs node pin
      id: ipfs-hash
      shell: bash
      run: |
        echo "Prepare env and Compress build"
        echo "${{ inputs.IPFS_SSH_KEY }}" | base64 --decode | jq > /mnt/data/tmp/key
        tar -czf app.tar.gz './${{ inputs.BUILD_PATH }}'

        echo "Upload build to IPFS server"

        scp -i /mnt/data/tmp/key -P {{ inputs.IPFS_STAGING_SERVER_PORT }} ipfs@{{ inputs.IPFS_STAGING_SERVER }}:/mnt/data/tmp/

        echo "Decompress build"
        ssh -p {{ inputs.IPFS_STAGING_SERVER_PORT }} -i /mnt/data/tmp/key ipfs@{{ inputs.IPFS_STAGING_SERVER }} 'tar -zxvf  /mnt/data/tmp/app.tar.gz -C /mnt/data/tmp/'

        echo "Add build to IPFS"
        IPFS_HASH="$(ssh -p {{ inputs.IPFS_STAGING_SERVER_PORT }} -i /mnt/data/tmp/key ipfs@{{ inputs.IPFS_STAGING_SERVER }} 'ipfs add /mnt/data/tmp/' ${{ inputs.BUILD_PATH }}"
        echo "{hash}={$IPFS_HASH}" >> $GITHUB_OUTPUT

        echo "Pin build to local IPFS"
        ssh -p {{ inputs.IPFS_STAGING_SERVER_PORT }} -i /mnt/data/tmp/key ipfs@{{ inputs.IPFS_STAGING_SERVER }} "ipfs pin add '$IPFS_HASH' "

        echo "Clean build and tmp directory"
        ssh -p {{ inputs.IPFS_STAGING_SERVER_PORT }} -i /mnt/data/tmp/key ipfs@{{ inputs.IPFS_STAGING_SERVER }} "rm -rf /mnt/data/tmp/*"