name: Build and deploy to IPFS

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2d1c1198e79c30cca5c3957b1e3b65ce95b5356e

      - name: restore
        continue-on-error: true
        id: restore
        uses: actions/download-artifact@v2
        with:
          path: out
          name: out_${{github.sha}}

      - uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: install
        run: yarn --frozen-lockfile --prefer-offline

      - name: build
        if: steps.restore.outcome != 'success'
        run: yarn build:static
        env:
          NEXT_PUBLIC_ENABLE_TESTNET: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && 'false' || 'true' }}
          NEXT_PUBLIC_ENABLE_GOVERNANCE: true
          NEXT_PUBLIC_ENABLE_STAKING: true

      - name: store artifact
        uses: actions/upload-artifact@v2
        with:
          name: out_${{github.sha}}
          path: out/
          retention-days: 10

  i18n-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@2d1c1198e79c30cca5c3957b1e3b65ce95b5356e

      - uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: install
        run: yarn --frozen-lockfile --prefer-offline

      - name: i18n
        run: |
          yarn i18n:extract
          yarn i18n:compile

      - name: check diff
        run: |
          if [[ -z $(git status -s) ]]
          then
            echo "i18n up to date"
          else
          	echo "please run yarn i18n"
            exit 1
          exit
          fi

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       market:
  #         - main
  #         # - amm
  #         - polygon
  #         # - avalanche

  #   steps:
  #     - uses: actions/checkout@2d1c1198e79c30cca5c3957b1e3b65ce95b5356e

  #     - uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a
  #       with:
  #         node-version-file: '.nvmrc'
  #         cache: 'yarn'

  #     - name: install
  #       run: yarn --frozen-lockfile --prefer-offline

  #     - name: download build
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: out_${{github.sha}}
  #         path: out

  #     - name: test
  #       uses: cypress-io/github-action@v2
  #       with:
  #         headless: true
  #         install: false
  #         record: false
  #         start: npm run serve:static
  #         wait-on: 'http://localhost:3000'
  #         command: npm run test:${{matrix.market}}
  #       env:
  #         CYPRESS_URL: 'http://localhost:3000'
  #         CYPRESS_TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}
  #         CYPRESS_TENDERLY_KEY: ${{ secrets.TENDERLY_KEY }}
  #         CYPRESS_TENDERLY_PROJECT: ${{ secrets.TENDERLY_PROJECT }}

  #     - name: upload screenshots
  #       uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: cypress-fail-screenshots-${{matrix.market}}
  #         path: cypress/screenshots

  #     - name: upload videos
  #       uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: cypress-fail-videos
  #         path: cypress/videos

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@2d1c1198e79c30cca5c3957b1e3b65ce95b5356e

      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: out_${{github.sha}}
          path: out

      - name: pinata
        id: pinata
        uses: aave/pinata-action@v1.1
        with:
          PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
          PINATA_SECRET_KEY: ${{ secrets.PINATA_SECRET_KEY }}
          PIN_ALIAS: "${{ format('pull_request_{0}', github.head_ref) }}"
          BUILD_LOCATION: './out'
          CID_VERSION: 1

      - name: crust
        uses: crustio/ipfs-crust-action@18f5ab4e8496351cfaca10a55ced7119cb0fe677
        if: |
          github.event_name == 'push' &&
          github.ref == 'refs/heads/master'
        continue-on-error: true
        timeout-minutes: 2
        with:
          cid: ${{ steps.pinata.outputs.hash }}
          seeds: ${{ secrets.CRUST_SEEDS }}

      - name: Deploy master
        id: deploy
        if: |
          github.event_name == 'push' &&
          github.ref == 'refs/heads/master'
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          HASH: ${{ steps.pinata.outputs.hash }}
          CF_DEPLOYMENT_DOMAIN: v3-internal-test.aave.com
        run: |
          yarn add axios
          node scripts/update-cloudflare.js
