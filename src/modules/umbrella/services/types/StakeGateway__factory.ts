/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { StakeGateway, StakeGatewayInterface } from './StakeGateway';

const _abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: '_stataTokenFactory',
        type: 'address',
        internalType: 'contract IStataTokenFactory',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'redeem',
    inputs: [
      {
        name: 'stakeToken',
        type: 'address',
        internalType: 'contract IERC4626StakeToken',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'redeemATokens',
    inputs: [
      {
        name: 'stakeToken',
        type: 'address',
        internalType: 'contract IERC4626StakeToken',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'stake',
    inputs: [
      {
        name: 'stakeToken',
        type: 'address',
        internalType: 'contract IERC4626StakeToken',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'stakeATokens',
    inputs: [
      {
        name: 'stakeToken',
        type: 'address',
        internalType: 'contract IERC4626StakeToken',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'stakeATokensWithPermit',
    inputs: [
      {
        name: 'stakeToken',
        type: 'address',
        internalType: 'contract IERC4626StakeToken',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'deadline',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'v',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'r',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 's',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'stakeWithPermit',
    inputs: [
      {
        name: 'stakeToken',
        type: 'address',
        internalType: 'contract IERC4626StakeToken',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'deadline',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'v',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'r',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 's',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'stataTokenFactory',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IStataTokenFactory',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'error',
    name: 'SafeERC20FailedOperation',
    inputs: [
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
] as const;

const _bytecode =
  '0x60a060405234801561001057600080fd5b50604051610f66380380610f6683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610edc61008a600039600060ad0152610edc6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634868658f1161005b5780634868658f146100fa57806373d6a8891461010d578063adc9772e14610120578063dd8866b71461013357600080fd5b806301b8a710146100825780631494088f146100a85780631e9a6950146100e7575b600080fd5b610095610090366004610d7f565b610146565b6040519081526020015b60405180910390f35b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161009f565b6100956100f5366004610d7f565b61015b565b610095610108366004610dab565b610169565b61009561011b366004610dab565b610327565b61009561012e366004610d7f565b610465565b610095610141366004610d7f565b610473565b6000610154828460016105c9565b9392505050565b6000610154828460006105c9565b600080876001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ce9190610e0d565b90506000816001600160a01b031663a0c1f15e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102349190610e0d565b905060001988036102aa576040516370a0823160e01b81523360048201526001600160a01b038216906370a0823190602401602060405180830381865afa158015610283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a79190610e2a565b97505b60405163d505accf60e01b81526001600160a01b0382169063d505accf906102e290339030908d908d908d908d908d90600401610e43565b600060405180830381600087803b1580156102fc57600080fd5b505af192505050801561030d575060015b5061031a888a6001610854565b9998505050505050505050565b600080876001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c9190610e0d565b90506000816001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190610e0d565b60405163d505accf60e01b81529091506001600160a01b0382169063d505accf9061042d90339030908d908d908d908d908d90600401610e43565b600060405180830381600087803b15801561044757600080fd5b505af1925050508015610458575060015b5061031a888a6000610854565b600061015482846000610854565b600080836001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d89190610e0d565b90506000816001600160a01b031663a0c1f15e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e9190610e0d565b905060001984036105b4576040516370a0823160e01b81523360048201526001600160a01b038216906370a0823190602401602060405180830381865afa15801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b19190610e2a565b93505b6105c084866001610854565b95945050505050565b600080841161061f5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b6000836001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561065f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106839190610e0d565b90506001600160a01b0381166106d15760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21039ba30b5b2903a37b5b2b760691b6044820152606401610616565b604051635d043b2960e11b8152600481018690523060248201523360448201526000906001600160a01b0386169063ba087652906064016020604051808303816000875af1158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190610e2a565b905083156107d3576040516304876fcd60e11b8152600481018290523360248201523060448201526001600160a01b0383169063090edf9a906064016020604051808303816000875af11580156107a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca9190610e2a565b92505050610154565b604051635d043b2960e11b8152600481018290523360248201523060448201526001600160a01b0383169063ba087652906064016020604051808303816000875af1158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a9190610e2a565b9695505050505050565b60008084116108a55760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610616565b6000836001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190610e0d565b90506001600160a01b0381166109575760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21039ba30b5b2903a37b5b2b760691b6044820152606401610616565b6000836109c557816001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561099c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c09190610e0d565b610a27565b816001600160a01b031663a0c1f15e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190610e0d565b9050610a3e6001600160a01b038216333089610c96565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820188905282169063095ea7b3906044016020604051808303816000875af1158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab19190610e84565b5060008415610b325760405163e25ec34960e01b8152600481018890523060248201526001600160a01b0384169063e25ec349906044016020604051808303816000875af1158015610b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2b9190610e2a565b9050610ba6565b604051636e553f6560e01b8152600481018890523060248201526001600160a01b03841690636e553f65906044016020604051808303816000875af1158015610b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba39190610e2a565b90505b60405163095ea7b360e01b81526001600160a01b0387811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c199190610e84565b50604051636e553f6560e01b8152600481018290523360248201526001600160a01b03871690636e553f65906044016020604051808303816000875af1158015610c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8b9190610e2a565b979650505050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610cf0908590610cf6565b50505050565b600080602060008451602086016000885af180610d19576040513d6000823e3d81fd5b50506000513d91508115610d31578060011415610d3e565b6001600160a01b0384163b155b15610cf057604051635274afe760e01b81526001600160a01b0385166004820152602401610616565b6001600160a01b0381168114610d7c57600080fd5b50565b60008060408385031215610d9257600080fd5b8235610d9d81610d67565b946020939093013593505050565b60008060008060008060c08789031215610dc457600080fd5b8635610dcf81610d67565b95506020870135945060408701359350606087013560ff81168114610df357600080fd5b9598949750929560808101359460a0909101359350915050565b600060208284031215610e1f57600080fd5b815161015481610d67565b600060208284031215610e3c57600080fd5b5051919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b600060208284031215610e9657600080fd5b8151801515811461015457600080fdfea26469706673582212201f459ecb9a00bf627bd8b5d690e1be08cf4a62d809fd4ca8b3b2b1ebd111854764736f6c63430008140033';

type StakeGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeGateway__factory extends ContractFactory {
  constructor(...args: StakeGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stataTokenFactory: string,
    overrides?: Overrides & { from?: string }
  ): Promise<StakeGateway> {
    return super.deploy(_stataTokenFactory, overrides || {}) as Promise<StakeGateway>;
  }
  override getDeployTransaction(
    _stataTokenFactory: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_stataTokenFactory, overrides || {});
  }
  override attach(address: string): StakeGateway {
    return super.attach(address) as StakeGateway;
  }
  override connect(signer: Signer): StakeGateway__factory {
    return super.connect(signer) as StakeGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeGatewayInterface {
    return new utils.Interface(_abi) as StakeGatewayInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): StakeGateway {
    return new Contract(address, _abi, signerOrProvider) as StakeGateway;
  }
}
